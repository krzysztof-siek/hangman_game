{"version":3,"sources":["./src/app/image/image.component.ts","./src/app/image/image.component.html","./src/app/game-content/alphabet/alphabet.component.ts","./src/app/game-content/alphabet/alphabet.component.html","./src/app/game-content/game-content.component.ts","./src/app/game-content/game-content.component.html","./src/app/game-content/stats/stats.component.ts","./src/app/game-content/stats/stats.component.html","./src/environments/environment.ts","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/game-content/drawn-word/drawn-word.component.ts","./src/app/game-content/drawn-word/drawn-word.component.html","./src/app/app.module.ts","./src/app/success-modal/success-modal.component.ts","./src/app/success-modal/success-modal.component.html","./src/app/app-routing.module.ts","./src/app/services/letters.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { LettersService } from '../services/letters.service';\n\n@Component({\n  selector: 'app-image',\n  templateUrl: './image.component.html',\n  styleUrls: ['./image.component.scss']\n})\nexport class ImageComponent implements OnInit {\n  wrongAnswer = 'empty';\n\n  constructor(private letterService: LettersService) { }\n\n  ngOnInit(): void {\n    this.letterService.wrongAnswers.subscribe((res) => {\n      this.wrongAnswer = `wrong${res}`;\n    });\n  }\n\n}\n","<div class=\"image {{wrongAnswer}}\" ></div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-alphabet',\n  templateUrl: './alphabet.component.html',\n  styleUrls: ['./alphabet.component.scss']\n})\nexport class AlphabetComponent implements OnInit {\n  @Output() emitLetter = new EventEmitter<string>();\n  @Input() status: string;\n  // tslint:disable-next-line: max-line-length\n  lettersList = ['a', 'ą', 'b', 'c', 'ć', 'd', 'e', 'ę', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'ł', 'm', 'n', 'ń', 'o', 'ó', 'p', 'q', 'r', 's', 'ś', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'ż', 'ź'];\n  clickedLettesList: string[] = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  clickedLetterHandler(letter: string): void {\n    if (this.status !== 'gameOver') {\n      this.clickedLettesList.push(letter);\n      this.emitLetter.emit(letter);\n    }\n  }\n\n  resetClickedList(): void {\n    this.clickedLettesList = [];\n  }\n\n}\n","<div class=\"alphabet-wrapper\">\n  <ul class=\"character-list\">\n    <li *ngFor=\"let letter of lettersList\" \n      class=\"single-character\" \n      [ngClass]=\"{'clicked' : clickedLettesList.includes(letter)}\"\n      (click)='clickedLetterHandler(letter)'>\n      <span class=\"letter\">{{letter}}</span>\n    </li>\n  </ul>\n</div>\n","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { LettersService } from '../services/letters.service';\nimport { AlphabetComponent } from './alphabet/alphabet.component';\nimport { SuccessModalComponent } from '../success-modal/success-modal.component';\n\n\n@Component({\n  selector: 'app-game-content',\n  templateUrl: './game-content.component.html',\n  styleUrls: ['./game-content.component.scss']\n})\nexport class GameContentComponent implements OnInit {\n  @Output() showStatus = new EventEmitter<string>();\n  @ViewChild(AlphabetComponent) alphabet: AlphabetComponent;\n  @ViewChild(SuccessModalComponent) modal: SuccessModalComponent;\n  status: string;\n  drawnWord: string;\n  matchLetters: string[] = [];\n  clicked: string[] = [];\n  wordsList: [];\n  wrongAnswers = 0;\n  resolved = 0;\n\n  constructor(private letterService: LettersService) {}\n\n  ngOnInit(): void {\n    this.getWordsList();\n    this.letterService.resetGame.subscribe(() => {\n      this.resetData();\n      this.resolved = 0;\n    });\n    this.letterService.timer();\n  }\n\n  getWordsList(): void {\n    this.letterService.getAnswers().subscribe((res) => {\n      this.wordsList = res.words;\n      this.drawWord();\n    });\n  }\n\n  drawWord(): void {\n    const index = Math.floor(Math.random() * this.wordsList?.length);\n    this.drawnWord = this.wordsList[index];\n    this.wordsList.splice(index, 1);\n  }\n\n  getClickedLetter(letter: string): void {\n    this.checkIfCorrectLetter(letter);\n    this.clicked.push(letter);\n  }\n\n  checkIfCorrectLetter(letter: string): void {\n    if ((this.drawnWord.includes(letter))) {\n      this.isCorrectLetterHandler(letter);\n    } else {\n      if (!this.clicked.includes(letter)) {\n        this.isWrongLetterHandler(this.wrongAnswers);\n      }\n    }\n  }\n\n  isCorrectLetterHandler(letter: string): void {\n    const separateLetters = [...this.drawnWord];\n    separateLetters.map(el => {\n        if (el === letter) {\n          this.matchLetters.push(letter);\n        }\n      });\n    if (this.drawnWord.length === this.matchLetters.length) {\n      if (this.resolved !== 5) {\n        this.setNextWord();\n      }\n    }\n  }\n\n  isWrongLetterHandler(wrongAnswers: number): void {\n    const updatedValue = this.wrongAnswers + 1;\n    this.wrongAnswers = updatedValue;\n    this.letterService.setNumberOfWrongAnswers(updatedValue);\n    if (updatedValue === 6) {\n      this.status = 'gameOver';\n      this.showStatus.emit(this.status);\n    }\n  }\n\n  setNextWord(): void {\n    this.resolved = this.resolved + 1;\n    if (this.resolved < 5) {\n      this.status = 'grats';\n      this.showStatus.emit(this.status);\n      setTimeout(() => {\n        this.resetData();\n      }, 1000);\n    } else {\n      this.modal.show();\n    }\n  }\n\n  resetData(): void {\n    this.letterService.setNumberOfWrongAnswers(0);\n    this.alphabet.resetClickedList();\n    this.wrongAnswers = 0;\n    this.matchLetters = [];\n    this.clicked = [];\n    this.drawWord();\n    this.status = '';\n    this.showStatus.emit(this.status);\n  }\n\n}\n","<div class=\"content-wrapper\">\n  <app-drawn-word [drawnWord]=\"drawnWord\" [matchLetters]=\"matchLetters\"></app-drawn-word>\n  <app-alphabet (emitLetter)=\"getClickedLetter($event)\" [status]=\"status\" #alphabet></app-alphabet>\n  <app-stats class=\"stats\" [wrongAnswers]=\"wrongAnswers\" [resolved]=\"resolved\" ></app-stats>\n  <p class=\"tip\">słowo to: {{drawnWord}}</p>\n</div>\n<app-success-modal #successModal></app-success-modal>\n\n\n\n","import { Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.component.html',\n  styleUrls: ['./stats.component.scss']\n})\nexport class StatsComponent {\n  @Input() wrongAnswers: number;\n  @Input() resolved: number;\n\n  constructor() { }\n\n}\n","<div class=\"stats-wrapper\">\n  <p>Kategoria: angielskie liczby :) </p>\n  <p [ngClass]=\"{'danger' : wrongAnswers > 4}\">Liczba błędów: <span>{{wrongAnswers}}</span></p>\n  <p>Rozwiązano: {{resolved}}</p>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent implements OnInit {\n  @Input() author?: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"welcome-wrapper\">\n  <h1 class=\"title\">Gra wisielec</h1>\n  <p class=\"description\">Zadanie rekrutacyjne: <span class=\"author\">Krzysztof Siek</span> </p>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { GameContentComponent } from './game-content/game-content.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  @ViewChild(GameContentComponent) content: GameContentComponent;\r\n  title = 'hangmanGame';\r\n  author = 'Krzysztof Siek';\r\n  status: string | undefined;\r\n\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"app-wrapper\">\r\n  <app-welcome></app-welcome>\r\n  <div class=\"main-content\">\r\n    <app-game-content (showStatus)='status = $event' #gameContent></app-game-content>\r\n    <app-image></app-image>\r\n  </div>\r\n  <div class=\"feedback-wrapper\">\r\n    <p class=\"success\" *ngIf=\"status === 'grats'\">Gratulacje, udało Ci się odgadnąć słowo! :) </p>\r\n    <p class=\"danger\" *ngIf=\"status === 'gameOver'\" >Game Over :(  - <span class=\"new-game\" (click)='content.resetData()'>Zacznij od nowa</span> </p>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-drawn-word',\n  templateUrl: './drawn-word.component.html',\n  styleUrls: ['./drawn-word.component.scss']\n})\nexport class DrawnWordComponent implements OnInit, OnChanges {\n  @Input() drawnWord: any;\n  @Input() matchLetters: any[];\n  letters: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.drawnWord){\n      this.letters = [...this.drawnWord];\n    }\n  }\n\n}\n","<div class=\"word-wrapper\">\n  <p class=\"letter\" \n    *ngFor=\"let letter of letters\">\n    {{matchLetters.includes(letter) ? letter : ''}}\n  </p>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { StatsComponent } from './game-content/stats/stats.component';\r\nimport { AlphabetComponent } from './game-content/alphabet/alphabet.component';\r\nimport { DrawnWordComponent } from './game-content/drawn-word/drawn-word.component';\r\nimport { ImageComponent } from './image/image.component';\r\nimport { GameContentComponent } from './game-content/game-content.component';\r\nimport { SuccessModalComponent } from './success-modal/success-modal.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    WelcomeComponent,\r\n    StatsComponent,\r\n    AlphabetComponent,\r\n    DrawnWordComponent,\r\n    ImageComponent,\r\n    GameContentComponent,\r\n    SuccessModalComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { LettersService } from '../services/letters.service';\n\n@Component({\n  selector: 'app-success-modal',\n  templateUrl: './success-modal.component.html',\n  styleUrls: ['./success-modal.component.scss']\n})\nexport class SuccessModalComponent implements OnInit {\n  showModal = false;\n  content: any;\n  title: any;\n  timeSpent: number[];\n\n  constructor(private letterService: LettersService) { }\n\n  ngOnInit(): void {\n  }\n\n  show(): void {\n    this.showModal = true;\n    this.content = 'Przeszedłeś wszystkie etapy gry :)';\n    this.title = 'Gratulacje! Udało Ci się!';\n    this.timeSpent = this.letterService.getTime();\n  }\n\n  hide(): void {\n    this.showModal = false;\n    this.letterService.resetGameEmit();\n  }\n\n\n\n}\n","<div class=\"modal c\" id=\"myModal\" [style.display]=\"showModal ? 'block' : 'none'\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n    \n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">{{ title }}</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click) = \"hide()\">&times;</button>\n      </div>\n\n      <div class=\"modal-body\">\n        {{ content }}\n        <p>W grze spędziłeś łącznie : <span *ngIf=\"timeSpent\">{{ timeSpent[0] > 0 ? timeSpent[0] + 'minut' : '' }} {{timeSpent[1]}}sekund</span>  </p>\n      </div>\n      \n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\" (click) = \"hide()\">Zagraj ponownie</button>\n      </div>\n      \n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LettersService {\n  wrongAnswers = new Subject<number>();\n  resetGame = new Subject<void>();\n  interval: any;\n  time = 0;\n  display: any;\n\n  constructor(private http: HttpClient) { }\n\n  setNumberOfWrongAnswers(wrongAnswers: number): void {\n    this.wrongAnswers.next(wrongAnswers);\n  }\n\n  resetGameEmit(): void {\n    this.resetGame.next();\n  }\n\n  getAnswers(): Observable<any> {\n    return this.http.get('assets/answers.json');\n  }\n\n  timer(): void {\n    this.interval = setInterval(() => {\n      if (this.time === 0) {\n        this.time++;\n      } else {\n        this.time++;\n      }\n      this.display = this.transformTime(this.time);\n    }, 1000);\n  }\n\n  transformTime(value: number): any {\n    const minutes: number = Math.floor(value / 60);\n    const seconds = value - minutes * 60;\n    const time = [minutes, seconds];\n    return time;\n  }\n\n  getTime(): any {\n    return this.display;\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}